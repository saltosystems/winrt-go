// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package foundation

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
)

const GUIDIAsyncAction string = "5a648006-843a-4da9-865b-9d26e5dfad7b"
const SignatureIAsyncAction string = "{5a648006-843a-4da9-865b-9d26e5dfad7b}"

type IAsyncAction struct {
	ole.IInspectable
}

type IAsyncActionVtbl struct {
	ole.IInspectableVtbl

	SetCompleted uintptr
	GetCompleted uintptr
	GetResults   uintptr
}

func (v *IAsyncAction) VTable() *IAsyncActionVtbl {
	return (*IAsyncActionVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *IAsyncAction) SetCompleted(handler *AsyncActionCompletedHandler) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().SetCompleted,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in AsyncActionCompletedHandler
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

func (v *IAsyncAction) GetCompleted() (*AsyncActionCompletedHandler, error) {
	var out *AsyncActionCompletedHandler
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetCompleted,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out AsyncActionCompletedHandler
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

func (v *IAsyncAction) GetResults() error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetResults,
		uintptr(unsafe.Pointer(v)), // this
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}
