// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint:all
package provider

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
	"github.com/saltosystems/winrt-go/windows/foundation/collections"
	"github.com/saltosystems/winrt-go/windows/storage"
)

const GUIDiStorageProviderItemPropertiesStatics string = "2d2c1c97-2704-4729-8fa9-7e6b8e158c2f"
const SignatureiStorageProviderItemPropertiesStatics string = "{2d2c1c97-2704-4729-8fa9-7e6b8e158c2f}"

type iStorageProviderItemPropertiesStatics struct {
	ole.IInspectable
}

type iStorageProviderItemPropertiesStaticsVtbl struct {
	ole.IInspectableVtbl

	StorageProviderItemPropertiesSetAsync uintptr
}

func (v *iStorageProviderItemPropertiesStatics) VTable() *iStorageProviderItemPropertiesStaticsVtbl {
	return (*iStorageProviderItemPropertiesStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func StorageProviderItemPropertiesSetAsync(item *storage.IStorageItem, itemProperties *collections.IIterable) (*foundation.IAsyncAction, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Storage.Provider.StorageProviderItemProperties", ole.NewGUID(GUIDiStorageProviderItemPropertiesStatics))
	if err != nil {
		return nil, err
	}
	v := (*iStorageProviderItemPropertiesStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncAction
	hr, _, _ := syscall.SyscallN(
		v.VTable().StorageProviderItemPropertiesSetAsync,
		0,                                       // this is a static func, so there's no this
		uintptr(unsafe.Pointer(item)),           // in storage.IStorageItem
		uintptr(unsafe.Pointer(itemProperties)), // in collections.IIterable
		uintptr(unsafe.Pointer(&out)),           // out foundation.IAsyncAction
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
