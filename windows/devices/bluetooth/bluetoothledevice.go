// Code generated by winrt-go-gen. DO NOT EDIT.

//go:build windows

//nolint
package bluetooth

import (
	"syscall"
	"unsafe"

	"github.com/go-ole/go-ole"
	"github.com/saltosystems/winrt-go/windows/foundation"
)

const SignatureBluetoothLEDevice string = "rc(Windows.Devices.Bluetooth.BluetoothLEDevice;{b5ee2f7b-4ad8-4642-ac48-80a0b500e887})"

type BluetoothLEDevice struct {
	ole.IUnknown
}

func (impl *BluetoothLEDevice) GetConnectionStatus() (BluetoothConnectionStatus, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiBluetoothLEDevice))
	defer itf.Release()
	v := (*iBluetoothLEDevice)(unsafe.Pointer(itf))
	return v.GetConnectionStatus()
}

func (impl *BluetoothLEDevice) AddConnectionStatusChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiBluetoothLEDevice))
	defer itf.Release()
	v := (*iBluetoothLEDevice)(unsafe.Pointer(itf))
	return v.AddConnectionStatusChanged(handler)
}

func (impl *BluetoothLEDevice) RemoveConnectionStatusChanged(token foundation.EventRegistrationToken) error {
	itf := impl.MustQueryInterface(ole.NewGUID(GUIDiBluetoothLEDevice))
	defer itf.Release()
	v := (*iBluetoothLEDevice)(unsafe.Pointer(itf))
	return v.RemoveConnectionStatusChanged(token)
}

func (impl *BluetoothLEDevice) Close() error {
	itf := impl.MustQueryInterface(ole.NewGUID(foundation.GUIDIClosable))
	defer itf.Release()
	v := (*foundation.IClosable)(unsafe.Pointer(itf))
	return v.Close()
}

const GUIDiBluetoothLEDevice string = "b5ee2f7b-4ad8-4642-ac48-80a0b500e887"
const SignatureiBluetoothLEDevice string = "{b5ee2f7b-4ad8-4642-ac48-80a0b500e887}"

type iBluetoothLEDevice struct {
	ole.IInspectable
}

type iBluetoothLEDeviceVtbl struct {
	ole.IInspectableVtbl

	GetDeviceId                   uintptr
	GetName                       uintptr
	GetGattServices               uintptr
	GetConnectionStatus           uintptr
	GetBluetoothAddress           uintptr
	GetGattService                uintptr
	AddNameChanged                uintptr
	RemoveNameChanged             uintptr
	AddGattServicesChanged        uintptr
	RemoveGattServicesChanged     uintptr
	AddConnectionStatusChanged    uintptr
	RemoveConnectionStatusChanged uintptr
}

func (v *iBluetoothLEDevice) VTable() *iBluetoothLEDeviceVtbl {
	return (*iBluetoothLEDeviceVtbl)(unsafe.Pointer(v.RawVTable))
}

func (v *iBluetoothLEDevice) GetConnectionStatus() (BluetoothConnectionStatus, error) {
	var out BluetoothConnectionStatus
	hr, _, _ := syscall.SyscallN(
		v.VTable().GetConnectionStatus,
		uintptr(unsafe.Pointer(v)),    // this
		uintptr(unsafe.Pointer(&out)), // out BluetoothConnectionStatus
	)

	if hr != 0 {
		return BluetoothConnectionStatusDisconnected, ole.NewError(hr)
	}

	return out, nil
}

func (v *iBluetoothLEDevice) AddConnectionStatusChanged(handler *foundation.TypedEventHandler) (foundation.EventRegistrationToken, error) {
	var out foundation.EventRegistrationToken
	hr, _, _ := syscall.SyscallN(
		v.VTable().AddConnectionStatusChanged,
		uintptr(unsafe.Pointer(v)),       // this
		uintptr(unsafe.Pointer(handler)), // in foundation.TypedEventHandler
		uintptr(unsafe.Pointer(&out)),    // out foundation.EventRegistrationToken
	)

	if hr != 0 {
		return foundation.EventRegistrationToken{}, ole.NewError(hr)
	}

	return out, nil
}

func (v *iBluetoothLEDevice) RemoveConnectionStatusChanged(token foundation.EventRegistrationToken) error {
	hr, _, _ := syscall.SyscallN(
		v.VTable().RemoveConnectionStatusChanged,
		uintptr(unsafe.Pointer(v)),      // this
		uintptr(unsafe.Pointer(&token)), // in token
	)

	if hr != 0 {
		return ole.NewError(hr)
	}

	return nil
}

const GUIDiBluetoothLEDevice2 string = "26f062b3-7aee-4d31-baba-b1b9775f5916"
const SignatureiBluetoothLEDevice2 string = "{26f062b3-7aee-4d31-baba-b1b9775f5916}"

type iBluetoothLEDevice2 struct {
	ole.IInspectable
}

type iBluetoothLEDevice2Vtbl struct {
	ole.IInspectableVtbl

	GetDeviceInformation    uintptr
	GetAppearance           uintptr
	GetBluetoothAddressType uintptr
}

func (v *iBluetoothLEDevice2) VTable() *iBluetoothLEDevice2Vtbl {
	return (*iBluetoothLEDevice2Vtbl)(unsafe.Pointer(v.RawVTable))
}

const GUIDiBluetoothLEDevice3 string = "aee9e493-44ac-40dc-af33-b2c13c01ca46"
const SignatureiBluetoothLEDevice3 string = "{aee9e493-44ac-40dc-af33-b2c13c01ca46}"

type iBluetoothLEDevice3 struct {
	ole.IInspectable
}

type iBluetoothLEDevice3Vtbl struct {
	ole.IInspectableVtbl

	GetDeviceAccessInformation   uintptr
	RequestAccessAsync           uintptr
	GetGattServicesAsync         uintptr
	GetGattServicesAsync2        uintptr
	GetGattServicesForUuidAsync  uintptr
	GetGattServicesForUuidAsync2 uintptr
}

func (v *iBluetoothLEDevice3) VTable() *iBluetoothLEDevice3Vtbl {
	return (*iBluetoothLEDevice3Vtbl)(unsafe.Pointer(v.RawVTable))
}

const GUIDiBluetoothLEDevice4 string = "2b605031-2248-4b2f-acf0-7cee36fc5870"
const SignatureiBluetoothLEDevice4 string = "{2b605031-2248-4b2f-acf0-7cee36fc5870}"

type iBluetoothLEDevice4 struct {
	ole.IInspectable
}

type iBluetoothLEDevice4Vtbl struct {
	ole.IInspectableVtbl

	GetBluetoothDeviceId uintptr
}

func (v *iBluetoothLEDevice4) VTable() *iBluetoothLEDevice4Vtbl {
	return (*iBluetoothLEDevice4Vtbl)(unsafe.Pointer(v.RawVTable))
}

const GUIDiBluetoothLEDevice5 string = "9d6a1260-5287-458e-95ba-17c8b7bb326e"
const SignatureiBluetoothLEDevice5 string = "{9d6a1260-5287-458e-95ba-17c8b7bb326e}"

type iBluetoothLEDevice5 struct {
	ole.IInspectable
}

type iBluetoothLEDevice5Vtbl struct {
	ole.IInspectableVtbl

	GetWasSecureConnectionUsedForPairing uintptr
}

func (v *iBluetoothLEDevice5) VTable() *iBluetoothLEDevice5Vtbl {
	return (*iBluetoothLEDevice5Vtbl)(unsafe.Pointer(v.RawVTable))
}

const GUIDiBluetoothLEDeviceStatics2 string = "5f12c06b-3bac-43e8-ad16-563271bd41c2"
const SignatureiBluetoothLEDeviceStatics2 string = "{5f12c06b-3bac-43e8-ad16-563271bd41c2}"

type iBluetoothLEDeviceStatics2 struct {
	ole.IInspectable
}

type iBluetoothLEDeviceStatics2Vtbl struct {
	ole.IInspectableVtbl

	GetDeviceSelectorFromPairingState      uintptr
	GetDeviceSelectorFromConnectionStatus  uintptr
	GetDeviceSelectorFromDeviceName        uintptr
	GetDeviceSelectorFromBluetoothAddress  uintptr
	GetDeviceSelectorFromBluetoothAddress2 uintptr
	GetDeviceSelectorFromAppearance        uintptr
	FromBluetoothAddressAsync              uintptr
}

func (v *iBluetoothLEDeviceStatics2) VTable() *iBluetoothLEDeviceStatics2Vtbl {
	return (*iBluetoothLEDeviceStatics2Vtbl)(unsafe.Pointer(v.RawVTable))
}

func FromBluetoothAddressAsync(bluetoothAddress uint64, bluetoothAddressType BluetoothAddressType) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Devices.Bluetooth.BluetoothLEDevice", ole.NewGUID(GUIDiBluetoothLEDeviceStatics2))
	if err != nil {
		return nil, err
	}
	v := (*iBluetoothLEDeviceStatics2)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().FromBluetoothAddressAsync,
		0,                         // this is a static func, so there's no this
		uintptr(bluetoothAddress), // in bluetoothAddress
		uintptr(unsafe.Pointer(&bluetoothAddressType)), // in bluetoothAddressType
		uintptr(unsafe.Pointer(&out)),                  // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}

const GUIDiBluetoothLEDeviceStatics string = "c8cf1a19-f0b6-4bf0-8689-41303de2d9f4"
const SignatureiBluetoothLEDeviceStatics string = "{c8cf1a19-f0b6-4bf0-8689-41303de2d9f4}"

type iBluetoothLEDeviceStatics struct {
	ole.IInspectable
}

type iBluetoothLEDeviceStaticsVtbl struct {
	ole.IInspectableVtbl

	FromIdAsync               uintptr
	FromBluetoothAddressAsync uintptr
	GetDeviceSelector         uintptr
}

func (v *iBluetoothLEDeviceStatics) VTable() *iBluetoothLEDeviceStaticsVtbl {
	return (*iBluetoothLEDeviceStaticsVtbl)(unsafe.Pointer(v.RawVTable))
}

func FromBluetoothAddressAsync(bluetoothAddress uint64) (*foundation.IAsyncOperation, error) {
	inspectable, err := ole.RoGetActivationFactory("Windows.Devices.Bluetooth.BluetoothLEDevice", ole.NewGUID(GUIDiBluetoothLEDeviceStatics))
	if err != nil {
		return nil, err
	}
	v := (*iBluetoothLEDeviceStatics)(unsafe.Pointer(inspectable))

	var out *foundation.IAsyncOperation
	hr, _, _ := syscall.SyscallN(
		v.VTable().FromBluetoothAddressAsync,
		0,                             // this is a static func, so there's no this
		uintptr(bluetoothAddress),     // in bluetoothAddress
		uintptr(unsafe.Pointer(&out)), // out foundation.IAsyncOperation
	)

	if hr != 0 {
		return nil, ole.NewError(hr)
	}

	return out, nil
}
